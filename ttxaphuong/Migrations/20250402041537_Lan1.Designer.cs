// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ttxaphuong.Data;

#nullable disable

namespace ttxaphuong.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250402041537_Lan1")]
    partial class Lan1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ttxaphuong.Models.Accounts.AccountsModel", b =>
                {
                    b.Property<int>("Id_account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_account"));

                    b.Property<DateTime?>("CodeExpiry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id_account");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id_account = 1,
                            Create_at = new DateTime(2025, 4, 2, 4, 15, 36, 995, DateTimeKind.Utc).AddTicks(2238),
                            Email = "hoanguyentranthi32@gmail.com",
                            Fullname = "Nguyễn Trần Thị Hòa",
                            Password = "03092003",
                            Role = "Manager",
                            Status = "IsActive",
                            Username = "ThiHoa"
                        },
                        new
                        {
                            Id_account = 2,
                            Create_at = new DateTime(2025, 4, 2, 4, 15, 36, 995, DateTimeKind.Utc).AddTicks(2243),
                            Email = "TuiLaHoa25@gmail.com",
                            Fullname = "Nguyễn Hòa Trần Thị",
                            Password = "123456789",
                            Role = "Admin",
                            Status = "IsActive",
                            Username = "HoaThi"
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Accounts.PermissionsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanAddUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanDeleteUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanEditUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanManagePermissions")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanManageRoles")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanViewUsers")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanAddUser = true,
                            CanDeleteUser = true,
                            CanEditUser = true,
                            CanManagePermissions = true,
                            CanManageRoles = true,
                            CanViewUsers = true,
                            ManagerId = 2
                        },
                        new
                        {
                            Id = 2,
                            CanAddUser = false,
                            CanDeleteUser = false,
                            CanEditUser = false,
                            CanManagePermissions = false,
                            CanManageRoles = false,
                            CanViewUsers = true,
                            ManagerId = 1
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Accounts.WebsiteSettingsModel", b =>
                {
                    b.Property<int>("Id_webiste")
                        .HasColumnType("int");

                    b.Property<string>("BannerBackgroundColor")
                        .HasColumnType("longtext");

                    b.Property<string>("BannerText")
                        .HasColumnType("longtext");

                    b.Property<string>("BannerUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("BannnerTextColor")
                        .HasColumnType("longtext");

                    b.Property<string>("FooterAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FooterBackgroundColor")
                        .HasColumnType("longtext");

                    b.Property<string>("FooterEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("FooterPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("FooterTextColor")
                        .HasColumnType("longtext");

                    b.Property<string>("GoogleMapEmbedLink")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderBackgroundColor")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderLayout")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderTextColor")
                        .HasColumnType("longtext");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("MenuBackgroundColor")
                        .HasColumnType("longtext");

                    b.Property<string>("MenuTextColor")
                        .HasColumnType("longtext");

                    b.Property<string>("SidebarBackgroundColor")
                        .HasColumnType("longtext");

                    b.Property<string>("SidebarLayout")
                        .HasColumnType("longtext");

                    b.Property<string>("SidebarTextColor")
                        .HasColumnType("longtext");

                    b.Property<string>("TextRunning")
                        .HasColumnType("longtext");

                    b.Property<string>("ThemeColor")
                        .HasColumnType("longtext");

                    b.Property<string>("WebsiteName")
                        .HasColumnType("longtext");

                    b.HasKey("Id_webiste");

                    b.ToTable("WebsiteSettings");

                    b.HasData(
                        new
                        {
                            Id_webiste = 1,
                            BannerBackgroundColor = "#f4f4f4",
                            BannerText = "Chào mừng bạn đến với Tin Tức 24h",
                            BannerUrl = "banner.jpg",
                            BannnerTextColor = "#333333",
                            FooterAddress = "123 Đường ABC, Quận 1, TP.HCM",
                            FooterBackgroundColor = "#333333",
                            FooterEmail = "contact@tintuc24h.com",
                            FooterPhone = "0123-456-789",
                            FooterTextColor = "#ffffff",
                            GoogleMapEmbedLink = "<iframe src='https://www.google.com/maps/embed?...'></iframe>",
                            HeaderBackgroundColor = "#000000",
                            HeaderLayout = "{\"fixed\": true, \"height\": \"60px\"}",
                            HeaderTextColor = "#ffcc00",
                            LogoUrl = "logo.png",
                            MenuBackgroundColor = "#ffffff",
                            MenuTextColor = "#000000",
                            SidebarBackgroundColor = "#1a1a1a",
                            SidebarLayout = "{\"position\": \"left\", \"width\": \"250px\"}",
                            SidebarTextColor = "#ffffff",
                            TextRunning = "#f0f0f0",
                            ThemeColor = "#ff5733",
                            WebsiteName = "Tin Tức 24h"
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Documents.Category_documentsModel", b =>
                {
                    b.Property<int>("Id_category_document")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_category_document"));

                    b.Property<int?>("DocumentParentId")
                        .HasColumnType("int");

                    b.Property<string>("Name_category_document")
                        .HasColumnType("longtext");

                    b.HasKey("Id_category_document");

                    b.HasIndex("DocumentParentId");

                    b.ToTable("Category_Documents");

                    b.HasData(
                        new
                        {
                            Id_category_document = 1,
                            Name_category_document = "Danh mục VB"
                        },
                        new
                        {
                            Id_category_document = 2,
                            DocumentParentId = 1,
                            Name_category_document = "Danh mục VB1"
                        },
                        new
                        {
                            Id_category_document = 3,
                            DocumentParentId = 2,
                            Name_category_document = "Danh mục VB1.1"
                        },
                        new
                        {
                            Id_category_document = 4,
                            DocumentParentId = 1,
                            Name_category_document = "Danh mục VB2"
                        },
                        new
                        {
                            Id_category_document = 5,
                            Name_category_document = "Danh mục VB3"
                        },
                        new
                        {
                            Id_category_document = 6,
                            DocumentParentId = 5,
                            Name_category_document = "Danh mục VB3.1"
                        },
                        new
                        {
                            Id_category_document = 7,
                            DocumentParentId = 5,
                            Name_category_document = "Danh mục VB3.1"
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Documents.DocumentModel", b =>
                {
                    b.Property<int>("Id_document")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_document"));

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Description_short")
                        .HasColumnType("longtext");

                    b.Property<string>("File_path")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_account")
                        .HasColumnType("int");

                    b.Property<int>("Id_category_document")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int?>("View_documents")
                        .HasColumnType("int");

                    b.HasKey("Id_document");

                    b.HasIndex("Id_account");

                    b.HasIndex("Id_category_document");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id_document = 1,
                            Create_at = new DateTime(2025, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mô tả văn bản 1",
                            Description_short = "Đó là nội dung ngắn mô tả về văn bản pháp luật 1",
                            File_path = "Doc1.docx",
                            Id_account = 2,
                            Id_category_document = 2,
                            IsVisible = true,
                            Title = "Văn bản pháp luật 1",
                            View_documents = 5
                        },
                        new
                        {
                            Id_document = 2,
                            Create_at = new DateTime(2025, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mô tả văn bản 2",
                            Description_short = "Đó là nội dung ngắn mô tả về văn bản pháp luật 2",
                            File_path = "Doc2.docx",
                            Id_account = 1,
                            Id_category_document = 1,
                            IsVisible = true,
                            Title = "Văn bản pháp luật 2",
                            View_documents = 10
                        },
                        new
                        {
                            Id_document = 3,
                            Create_at = new DateTime(2025, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mô tả văn bản 3",
                            Description_short = "Đó là nội dung ngắn mô tả về văn bản pháp luật 3",
                            File_path = "Doc3.docx",
                            Id_account = 1,
                            Id_category_document = 2,
                            IsVisible = false,
                            Title = "Văn bản pháp luật 3",
                            View_documents = 15
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Feedbacks.FeedbacksModel", b =>
                {
                    b.Property<int>("Id_feedbacks")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_feedbacks"));

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Received_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_feedbacks");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id_feedbacks = 1,
                            Content = "Nội dung 1",
                            Email = "NguyenVanA@gmail.com",
                            Fullname = "Nguyễn Văn A",
                            Phone = "0772962490",
                            Received_at = new DateTime(2025, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending"
                        },
                        new
                        {
                            Id_feedbacks = 2,
                            Content = "Nội dung 2",
                            Email = "NguyenVanB@gmail.com",
                            Fullname = "Nguyễn Văn B",
                            Phone = "0772962490",
                            Received_at = new DateTime(2025, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Approved"
                        },
                        new
                        {
                            Id_feedbacks = 3,
                            Content = "Nội dung 3",
                            Email = "NguyenVanC@gmail.com",
                            Fullname = "Nguyễn Văn C",
                            Phone = "0772962490",
                            Received_at = new DateTime(2025, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Rejected"
                        },
                        new
                        {
                            Id_feedbacks = 4,
                            Content = "Nội dung 4",
                            Email = "NguyenVanC@gmail.com",
                            Fullname = "Nguyễn Thị Hoa",
                            Phone = "0772962490",
                            Received_at = new DateTime(2025, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending"
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Introduce.Categories_introduceModel", b =>
                {
                    b.Property<int>("Id_cate_introduce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_cate_introduce"));

                    b.Property<string>("Name_cate_introduce")
                        .HasColumnType("longtext");

                    b.HasKey("Id_cate_introduce");

                    b.ToTable("Categories_Introduces");

                    b.HasData(
                        new
                        {
                            Id_cate_introduce = 1,
                            Name_cate_introduce = "Giới thiệu 1"
                        },
                        new
                        {
                            Id_cate_introduce = 2,
                            Name_cate_introduce = "Giới thiệu 2"
                        },
                        new
                        {
                            Id_cate_introduce = 3,
                            Name_cate_introduce = "Giới thiệu 3"
                        },
                        new
                        {
                            Id_cate_introduce = 4,
                            Name_cate_introduce = "Giới thiệu 4"
                        },
                        new
                        {
                            Id_cate_introduce = 5,
                            Name_cate_introduce = "Giới thiệu 5"
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Introduce.IntroduceModel", b =>
                {
                    b.Property<int>("Id_introduce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_introduce"));

                    b.Property<DateTime?>("Create_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FormatHTML")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_cate_introduce")
                        .HasColumnType("int");

                    b.Property<string>("Image_url")
                        .HasColumnType("longtext");

                    b.Property<string>("Name_introduce")
                        .HasColumnType("longtext");

                    b.HasKey("Id_introduce");

                    b.HasIndex("Id_cate_introduce");

                    b.ToTable("Introduces");

                    b.HasData(
                        new
                        {
                            Id_introduce = 1,
                            Create_at = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mô tả chính 1",
                            FormatHTML = "Mô tả ngắn 1",
                            Id_cate_introduce = 1,
                            Image_url = "Anh1.jpg",
                            Name_introduce = "Name giới thiệu 1"
                        },
                        new
                        {
                            Id_introduce = 2,
                            Create_at = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mô tả chính 2",
                            FormatHTML = "Mô tả ngắn 2",
                            Id_cate_introduce = 3,
                            Image_url = "Anh2.jpg",
                            Name_introduce = "Name giới thiệu 2"
                        },
                        new
                        {
                            Id_introduce = 3,
                            Create_at = new DateTime(2025, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mô tả chính 3",
                            FormatHTML = "Mô tả ngắn 3",
                            Id_cate_introduce = 2,
                            Image_url = "Anh3.jpg",
                            Name_introduce = "Name giới thiệu 3"
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.FolderModel", b =>
                {
                    b.Property<int>("Id_folder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_folder"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name_folder")
                        .HasColumnType("longtext");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id_folder");

                    b.HasIndex("ParentId");

                    b.ToTable("Folders");

                    b.HasData(
                        new
                        {
                            Id_folder = 1,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục hình ảnh 1"
                        },
                        new
                        {
                            Id_folder = 2,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục hình ảnh 1.1",
                            ParentId = 1
                        },
                        new
                        {
                            Id_folder = 3,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục hình ảnh 1.2",
                            ParentId = 1
                        },
                        new
                        {
                            Id_folder = 4,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục hình ảnh 2"
                        },
                        new
                        {
                            Id_folder = 5,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục hình ảnh 2.1",
                            ParentId = 4
                        },
                        new
                        {
                            Id_folder = 6,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục hình ảnh 2.2",
                            ParentId = 4
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.FolderPdfModel", b =>
                {
                    b.Property<int>("Id_folder_pdf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_folder_pdf"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name_folder")
                        .HasColumnType("longtext");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id_folder_pdf");

                    b.HasIndex("ParentId");

                    b.ToTable("FolderPdfs");

                    b.HasData(
                        new
                        {
                            Id_folder_pdf = 1,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục pdf 1"
                        },
                        new
                        {
                            Id_folder_pdf = 2,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục pdf 1.1",
                            ParentId = 1
                        },
                        new
                        {
                            Id_folder_pdf = 3,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục pdf 1.2",
                            ParentId = 1
                        },
                        new
                        {
                            Id_folder_pdf = 4,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục pdf 2"
                        },
                        new
                        {
                            Id_folder_pdf = 5,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục pdf 2.1",
                            ParentId = 4
                        },
                        new
                        {
                            Id_folder_pdf = 6,
                            CreatedAt = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name_folder = " Danh mục pdf 2.2",
                            ParentId = 4
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.PostImageModel", b =>
                {
                    b.Property<int>("Id_Image")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Image"));

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_folder")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id_Image");

                    b.HasIndex("Id_folder");

                    b.ToTable("PostImages");

                    b.HasData(
                        new
                        {
                            Id_Image = 1,
                            FileName = "Anh1.jpg",
                            FilePath = "AAAAA",
                            Id_folder = 1,
                            UploadedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Image = 2,
                            FileName = "Anh2.jpg",
                            FilePath = "BBBB",
                            Id_folder = 2,
                            UploadedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Image = 3,
                            FileName = "Anh3.jpg",
                            FilePath = "CCCC",
                            Id_folder = 1,
                            UploadedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Image = 4,
                            FileName = "Anh4.jpg",
                            FilePath = "DDDDD",
                            Id_folder = 2,
                            UploadedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.PostPdfModel", b =>
                {
                    b.Property<int>("Id_Pdf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Pdf"));

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_folder_pdf")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id_Pdf");

                    b.HasIndex("Id_folder_pdf");

                    b.ToTable("PostPdfs");

                    b.HasData(
                        new
                        {
                            Id_Pdf = 1,
                            FileName = "Anh1.jpg",
                            FilePath = "AAAAA",
                            Id_folder_pdf = 1,
                            UploadedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Pdf = 2,
                            FileName = "Anh2.jpg",
                            FilePath = "BBBB",
                            Id_folder_pdf = 2,
                            UploadedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Pdf = 3,
                            FileName = "Anh3.jpg",
                            FilePath = "CCCC",
                            Id_folder_pdf = 1,
                            UploadedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Pdf = 4,
                            FileName = "Anh4.jpg",
                            FilePath = "DDDDD",
                            Id_folder_pdf = 2,
                            UploadedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.News_events.CategoriesModel", b =>
                {
                    b.Property<int>("Id_categories")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_categories"));

                    b.Property<string>("Name_category")
                        .HasColumnType("longtext");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id_categories");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id_categories = 1,
                            Name_category = " Danh mục A"
                        },
                        new
                        {
                            Id_categories = 2,
                            Name_category = " Danh mục A1",
                            ParentId = 1
                        },
                        new
                        {
                            Id_categories = 3,
                            Name_category = " Danh mục A1.1",
                            ParentId = 2
                        },
                        new
                        {
                            Id_categories = 4,
                            Name_category = " Danh mục A2",
                            ParentId = 1
                        },
                        new
                        {
                            Id_categories = 5,
                            Name_category = " Danh mục B"
                        },
                        new
                        {
                            Id_categories = 6,
                            Name_category = " Danh mục B1",
                            ParentId = 5
                        },
                        new
                        {
                            Id_categories = 7,
                            Name_category = " Danh mục B1.1",
                            ParentId = 6
                        },
                        new
                        {
                            Id_categories = 8,
                            Name_category = " Danh mục B1.2",
                            ParentId = 6
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.News_events.News_eventsModel", b =>
                {
                    b.Property<int>("Id_newsevent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_newsevent"));

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description_short")
                        .HasColumnType("longtext");

                    b.Property<string>("Formatted_content")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_account")
                        .HasColumnType("int");

                    b.Property<int>("Id_categories")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int?>("View")
                        .HasColumnType("int");

                    b.HasKey("Id_newsevent");

                    b.HasIndex("Id_account");

                    b.HasIndex("Id_categories");

                    b.ToTable("News_Events");

                    b.HasData(
                        new
                        {
                            Id_newsevent = 1,
                            Content = "Chi tiết nội dung 1",
                            Create_at = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description_short = "Nội dung tin tức 1",
                            Formatted_content = "abc",
                            Id_account = 2,
                            Id_categories = 2,
                            Image = "Anh1.jpg",
                            IsVisible = true,
                            Title = "Tin tức & Sự kiện 1",
                            View = 26
                        },
                        new
                        {
                            Id_newsevent = 2,
                            Content = "Chi tiết nội dung 2",
                            Create_at = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description_short = "Nội dung tin tức 2",
                            Formatted_content = "abc",
                            Id_account = 1,
                            Id_categories = 3,
                            Image = "Anh2.jpg",
                            IsVisible = true,
                            Title = "Tin tức & Sự kiện 2",
                            View = 10
                        },
                        new
                        {
                            Id_newsevent = 3,
                            Content = "Chi tiết nội dung 3",
                            Create_at = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description_short = "Nội dung tin tức 3",
                            Formatted_content = "abc",
                            Id_account = 2,
                            Id_categories = 2,
                            Image = "Anh3.jpg",
                            IsVisible = false,
                            Title = "Tin tức & Sự kiện 3",
                            View = 12
                        },
                        new
                        {
                            Id_newsevent = 4,
                            Content = "Chi tiết nội dung 4",
                            Create_at = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description_short = "Nội dung tin tức 4",
                            Formatted_content = "abc",
                            Id_account = 2,
                            Id_categories = 4,
                            Image = "Anh4.jpg",
                            IsVisible = false,
                            Title = "Tin tức & Sự kiện 4",
                            View = 16
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Procedures.Categogy_fieldModel", b =>
                {
                    b.Property<int>("Id_Field")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Field"));

                    b.Property<int?>("FielParentId")
                        .HasColumnType("int");

                    b.Property<string>("Name_Field")
                        .HasColumnType("longtext");

                    b.HasKey("Id_Field");

                    b.HasIndex("FielParentId");

                    b.ToTable("Categogy_Fields");

                    b.HasData(
                        new
                        {
                            Id_Field = 1,
                            Name_Field = "Danh mục lĩnh vực 1"
                        },
                        new
                        {
                            Id_Field = 2,
                            FielParentId = 1,
                            Name_Field = "Danh mục lĩnh vực 2"
                        },
                        new
                        {
                            Id_Field = 3,
                            FielParentId = 2,
                            Name_Field = "Danh mục lĩnh vực 3"
                        },
                        new
                        {
                            Id_Field = 4,
                            Name_Field = "Danh mục lĩnh vực 4"
                        },
                        new
                        {
                            Id_Field = 5,
                            FielParentId = 2,
                            Name_Field = "Danh mục lĩnh vực 5"
                        },
                        new
                        {
                            Id_Field = 6,
                            FielParentId = 1,
                            Name_Field = "Danh mục lĩnh vực 6"
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Procedures.ProceduresModel", b =>
                {
                    b.Property<int>("Id_procedures")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_procedures"));

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Date_issue")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FormatText")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_Field")
                        .HasColumnType("int");

                    b.Property<int>("Id_account")
                        .HasColumnType("int");

                    b.Property<string>("Id_thutuc")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name_procedures")
                        .HasColumnType("longtext");

                    b.HasKey("Id_procedures");

                    b.HasIndex("Id_Field");

                    b.HasIndex("Id_account");

                    b.ToTable("Procedures");

                    b.HasData(
                        new
                        {
                            Id_procedures = 1,
                            Create_at = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_issue = new DateTime(2025, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mô tả 1",
                            FormatText = "abcd",
                            Id_Field = 1,
                            Id_account = 2,
                            Id_thutuc = "N1",
                            IsVisible = true,
                            Name_procedures = "Tên thủ tục 1"
                        },
                        new
                        {
                            Id_procedures = 2,
                            Create_at = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_issue = new DateTime(2025, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mô tả 2",
                            FormatText = "abcd",
                            Id_Field = 2,
                            Id_account = 2,
                            Id_thutuc = "N2",
                            IsVisible = true,
                            Name_procedures = "Tên thủ tục 2"
                        },
                        new
                        {
                            Id_procedures = 3,
                            Create_at = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_issue = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mô tả 3",
                            FormatText = "abcd",
                            Id_Field = 2,
                            Id_account = 1,
                            Id_thutuc = "N3",
                            IsVisible = true,
                            Name_procedures = "Tên thủ tục 3"
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Settings.SettingsModel", b =>
                {
                    b.Property<int>("Id_settings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_settings"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Key_name")
                        .HasColumnType("longtext");

                    b.HasKey("Id_settings");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id_settings = 1,
                            Description = "Mô tả cấu hình 1",
                            Key_name = "Cấu hình 1"
                        },
                        new
                        {
                            Id_settings = 2,
                            Description = "Mô tả cấu hình 2",
                            Key_name = "Cấu hình 2"
                        });
                });

            modelBuilder.Entity("ttxaphuong.Models.Accounts.PermissionsModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Accounts.AccountsModel", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("ttxaphuong.Models.Documents.Category_documentsModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Documents.Category_documentsModel", "Category_Documents")
                        .WithMany("Children")
                        .HasForeignKey("DocumentParentId");

                    b.Navigation("Category_Documents");
                });

            modelBuilder.Entity("ttxaphuong.Models.Documents.DocumentModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Accounts.AccountsModel", "Accounts")
                        .WithMany()
                        .HasForeignKey("Id_account")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ttxaphuong.Models.Documents.Category_documentsModel", "Category_Documents")
                        .WithMany()
                        .HasForeignKey("Id_category_document")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Category_Documents");
                });

            modelBuilder.Entity("ttxaphuong.Models.Introduce.IntroduceModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Introduce.Categories_introduceModel", "Categories_IntroduceModel")
                        .WithMany()
                        .HasForeignKey("Id_cate_introduce")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories_IntroduceModel");
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.FolderModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Loads.FolderModel", "Folder")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Folder");
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.FolderPdfModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Loads.FolderPdfModel", "FolderPdf")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("FolderPdf");
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.PostImageModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Loads.FolderModel", "FolderModel")
                        .WithMany()
                        .HasForeignKey("Id_folder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FolderModel");
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.PostPdfModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Loads.FolderPdfModel", "FolderPdfModel")
                        .WithMany()
                        .HasForeignKey("Id_folder_pdf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FolderPdfModel");
                });

            modelBuilder.Entity("ttxaphuong.Models.News_events.CategoriesModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.News_events.CategoriesModel", "Categories")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("ttxaphuong.Models.News_events.News_eventsModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Accounts.AccountsModel", "Accounts")
                        .WithMany()
                        .HasForeignKey("Id_account")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ttxaphuong.Models.News_events.CategoriesModel", "CategoriesModel")
                        .WithMany()
                        .HasForeignKey("Id_categories")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("CategoriesModel");
                });

            modelBuilder.Entity("ttxaphuong.Models.Procedures.Categogy_fieldModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Procedures.Categogy_fieldModel", "Categogy_Field")
                        .WithMany("Children")
                        .HasForeignKey("FielParentId");

                    b.Navigation("Categogy_Field");
                });

            modelBuilder.Entity("ttxaphuong.Models.Procedures.ProceduresModel", b =>
                {
                    b.HasOne("ttxaphuong.Models.Procedures.Categogy_fieldModel", "Categogy_Field")
                        .WithMany()
                        .HasForeignKey("Id_Field")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ttxaphuong.Models.Accounts.AccountsModel", "Accounts")
                        .WithMany()
                        .HasForeignKey("Id_account")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Categogy_Field");
                });

            modelBuilder.Entity("ttxaphuong.Models.Documents.Category_documentsModel", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.FolderModel", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("ttxaphuong.Models.Loads.FolderPdfModel", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("ttxaphuong.Models.News_events.CategoriesModel", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("ttxaphuong.Models.Procedures.Categogy_fieldModel", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
